version: '3.7'

services:
  kong:
    image: 'bitnami/kong:3.7.1'
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /config/kong.yml
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./kong.yml:/config/kong.yml
    depends_on:
      - device-manager
      - telemetry-service

  device-manager:
    image: misikch/ya-practicum-arch-sprint3-device-manager:latest
    container_name: device-manager
    ports:
      - "8081"
    command: ["/app/service"]
    environment:
      - SERVICE_PORT=8081
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USER=mongouser
      - MONGO_PASSWORD=mongopass
      - MONGO_DATABASE=smart-home-db
      - KAFKA_BROKER=kafka1:9092
      - KAFKA_DEVICES_TOPIC=device_topic
    depends_on:
      - mongodb
      - kafka1
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  telemetry-service:
    image: misikch/ya-practicum-arch-sprint3-telemetry:latest
    ports:
      - "8082"
    command: [ "/app/service" ]
    environment:
      - SERVICE_PORT=8082
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USER=mongouser
      - MONGO_PASSWORD=mongopass
      - MONGO_DATABASE=smart-home-db
      - KAFKA_BROKER=kafka1:9092
      - KAFKA_TELEMETRY_TOPIC=telemetry_topic
      - KAFKA_DEVICES_TOPIC=device_topic
    depends_on:
      - mongodb
      - kafka1
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  telemetry-worker:
    image: misikch/ya-practicum-arch-sprint3-telemetry:latest
    container_name: telemetry-worker
    command: [ "/app/worker" ]
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USER=mongouser
      - MONGO_PASSWORD=mongopass
      - MONGO_DATABASE=smart-home-db
      - KAFKA_BROKER=kafka1:9092
      - KAFKA_TELEMETRY_TOPIC=telemetry_topic
      - KAFKA_DEVICES_TOPIC=device_topic
    depends_on:
      - mongodb
      - kafka1
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: smart-home-db
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/init.js

  kafka1:
    image: 'bitnami/kafka:3.7.0'
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=S40B8iVtR0umuTyuM1eLjA
      - KAFKA_CFG_NODE_ID=1
    command: >
      sh -c "
        /opt/bitnami/scripts/kafka/run.sh &
        sleep 5;
        kafka-topics.sh --create --topic telemetry_topic --partitions 1 --replication-factor 1 --bootstrap-server localhost:9092;
        kafka-topics.sh --create --topic device_topic --partitions 2 --replication-factor 1 --bootstrap-server localhost:9092;
        wait"
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka1:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
#      - DYNAMIC_CONFIG_ENABLED=true

#  kafka:
#    image: 'bitnami/kafka:latest'
#    ports:
#      - 9092:9092
#    environment:
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
#    command: >
#      sh -c "
#        /opt/bitnami/scripts/kafka/run.sh &
#        sleep 5;
#        kafka-topics.sh --create --topic telemetry_topic --partitions 1 --replication-factor 1 --bootstrap-server localhost:9092;
#        kafka-topics.sh --create --topic device_topic --partitions 2 --replication-factor 1 --bootstrap-server localhost:9092;
#        wait"